{"version":3,"sources":["RichEditor/utils/links.js","RichEditor/utils/images.js","RichEditor/constants.js","RichEditor/utils/blocks.js","RichEditor/utils/marks.js","RichEditor/Toolbar/Toolbar.js","RichEditor/Button/Button.js","RichEditor/Icon/Icon.js","RichEditor/Image/Image.js","RichEditor/RichEditor.js","App.js","index.js"],"names":["wrapLink","editor","url","isLinkActive","Transforms","unwrapNodes","match","n","type","unwrapLink","selection","isCollapsed","Range","link","children","text","insertNodes","wrapNodes","split","collapse","edge","insertLink","window","prompt","Editor","nodes","insertImage","image","paragraph","addImage","withImages","insertData","isVoid","element","data","getData","files","length","file","reader","FileReader","addEventListener","result","readAsDataURL","isUrl","ext","URL","pathname","pop","imageExtensions","includes","isImageUrl","HOTKEYS","LIST_TYPES","isBlockActive","format","toggleBlock","isActive","isList","setNodes","block","isMarkActive","marks","toggleMark","removeMark","addMark","Menu","React","forwardRef","ref","className","props","cx","css","Toolbar","Button","active","reversed","Icon","Image","attributes","selected","useSelected","focused","useFocused","contentEditable","alt","src","Element","href","Leaf","leaf","bold","code","italic","underline","strikethrough","ToolButton","toggleFunc","icon","useSlate","onMouseDown","event","preventDefault","initialValue","RichEditor","useState","value","setValue","renderElement","useCallback","renderLeaf","useMemo","insertText","isInline","withLinks","withHistory","withReact","createEditor","onChange","placeholder","spellCheck","autoFocus","onKeyDown","hotkey","isHotkey","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2235f0c.chunk.js","sourcesContent":["import isUrl from 'is-url'\nimport { Editor, Transforms, Range } from 'slate'\n\nconst unwrapLink = editor => {\n  Transforms.unwrapNodes(editor, { match: n => n.type === 'link' })\n}\n\nconst wrapLink = (editor, url) => {\n  if (isLinkActive(editor)) {\n    unwrapLink(editor)\n  }\n\n  const { selection } = editor\n  const isCollapsed = selection && Range.isCollapsed(selection)\n  const link = {\n    type: 'link',\n    url,\n    children: isCollapsed ? [{ text: url }] : [],\n  }\n\n  if (isCollapsed) {\n    Transforms.insertNodes(editor, link)\n  } else {\n    Transforms.wrapNodes(editor, link, { split: true })\n    Transforms.collapse(editor, { edge: 'end' })\n  }\n}\n\nexport const insertLink = editor => {\n  const url = window.prompt('Enter the URL of the link:')\n  if (!url) return\n  if (editor.selection) {\n    wrapLink(editor, url)\n  }\n}\n\nexport const isLinkActive = editor => {\n  const [link] = Editor.nodes(editor, { match: n => n.type === 'link' })\n  return !!link\n}\n\nexport const withLinks = editor => {\n  const { insertData, insertText, isInline } = editor\n\n  editor.isInline = element => {\n    return element.type === 'link' ? true : isInline(element)\n  }\n\n  editor.insertText = text => {\n    if (text && isUrl(text)) {\n      wrapLink(editor, text)\n    } else {\n      insertText(text)\n    }\n  }\n\n  editor.insertData = data => {\n    const text = data.getData('text/plain')\n\n    if (text && isUrl(text)) {\n      wrapLink(editor, text)\n    } else {\n      insertData(data)\n    }\n  }\n\n  return editor\n}","import { Transforms } from 'slate'\nimport isUrl from 'is-url'\nimport imageExtensions from 'image-extensions'\n\nconst insertImage = (editor, url) => {\n  const text = { text: '' }\n  const image = { type: 'image', url, children: [text] }\n  const paragraph = { type: 'paragraph', children: [text]}\n  Transforms.insertNodes(editor, [image, paragraph])\n}\n\nconst isImageUrl = url => {\n  if (!url) return false\n  if (!isUrl(url)) return false\n  const ext = new URL(url).pathname.split('.').pop()\n  return imageExtensions.includes(ext)\n}\n\nexport const addImage = editor => {\n  const url = window.prompt('Enter the URL of the image:')\n  if (!url) return\n  insertImage(editor, url)\n}\n\nexport const withImages = editor => {\n  const { insertData, isVoid } = editor\n\n  editor.isVoid = element => {\n    return element.type === 'image' ? true : isVoid(element)\n  }\n\n  editor.insertData = data => {\n    const text = data.getData('text/plain')\n    const { files } = data\n\n    if (files && files.length > 0) {\n      for (const file of files) {\n        const reader = new FileReader()\n        const [mime] = file.type.split('/')\n\n        if (mime === 'image') {\n          reader.addEventListener('load', () => {\n            const url = reader.result\n            insertImage(editor, url)\n          })\n\n          reader.readAsDataURL(file)\n        }\n      }\n    } else if (isImageUrl(text)) {\n      insertImage(editor, text)\n    } else {\n      insertData(data)\n    }\n  }\n\n  return editor\n}","export const HOTKEYS = {\n  'mod+b': 'bold',\n  'mod+i': 'italic',\n  'mod+u': 'underline',\n  'mod+shift+x': 'strikethrough',\n  'mod+j': 'code',\n}\n\nexport const LIST_TYPES = ['numbered-list', 'bulleted-list']","import { Editor, Transforms } from 'slate'\nimport { LIST_TYPES } from '../constants'\n\nexport const isBlockActive = (editor, format) => {\n  const [match] = Editor.nodes(editor, {\n    match: n => n.type === format,\n  })\n\n  return !!match\n}\n\nexport const toggleBlock = (editor, format) => {\n  const isActive = isBlockActive(editor, format)\n  const isList = LIST_TYPES.includes(format)\n\n  Transforms.unwrapNodes(editor, {\n    match: n => LIST_TYPES.includes(n.type),\n    split: true,\n  })\n\n  Transforms.setNodes(editor, {\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format,\n  })\n\n  if (!isActive && isList) {\n    const block = { type: format, children: [] }\n    Transforms.wrapNodes(editor, block)\n  }\n}","import { Editor } from 'slate'\n\nexport const isMarkActive = (editor, format) => {\n  const marks = Editor.marks(editor)\n  return marks ? marks[format] === true : false\n}\n\nexport const toggleMark = (editor, format) => {\n  const isActive = isMarkActive(editor, format)\n\n  if (isActive) {\n    Editor.removeMark(editor, format)\n  } else {\n    Editor.addMark(editor, format, true)\n  }\n}","import React from 'react';\nimport { cx, css } from 'emotion'\n\nconst Menu = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    {...props}\n    ref={ref}\n    className={cx(\n      className,\n      css`\n        & > * {\n          display: inline-block;\n        }\n        & > * + * {\n          margin-left: 15px;\n        }\n      `\n    )}\n  />\n))\n\nconst Toolbar = React.forwardRef(({ className, ...props }, ref) => (\n  <Menu\n    {...props}\n    ref={ref}\n    className={cx(\n      className,\n      css`\n        position: relative;\n        padding: 1px 18px 17px;\n        margin: 0 -20px;\n        border-bottom: 2px solid #eee;\n        margin-bottom: 20px;\n      `\n    )}\n  />\n))\n\nexport default Toolbar;","import React from 'react'\nimport { cx, css } from 'emotion'\n\nconst Button = React.forwardRef(\n  ({ className, active, reversed, ...props }, ref) => (\n    <span\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        css`\n          cursor: pointer;\n          color: ${reversed\n            ? active\n              ? 'white'\n              : '#aaa'\n            : active\n            ? 'black'\n            : '#ccc'};\n        `\n      )}\n    />\n  )\n)\n\nexport default Button","import React from 'react'\nimport { cx, css } from 'emotion'\n\nconst Icon = React.forwardRef(({ className, ...props }, ref) => (\n  <span\n    {...props}\n    ref={ref}\n    className={cx(\n      'material-icons',\n      className,\n      css`\n        font-size: 18px;\n        vertical-align: text-bottom;\n      `\n    )}\n  />\n))\n\nexport default Icon","import React from 'react'\nimport { useSelected, useFocused } from 'slate-react'\nimport { css } from 'emotion'\n\nconst Image = ({ attributes, children, element }) => {\n  const selected = useSelected()\n  const focused = useFocused()\n\n  return (\n    <div {...attributes}>\n      <div contentEditable={false}>\n        <img\n          alt=\"\"\n          src={element.url}\n          className={css`\n            display: block;\n            max-width: 100%;\n            max-height: 20em;\n            box-shadow: ${selected && focused ? '0 0 0 3px #B4D5FF' : 'none'};\n          `}\n        />\n      </div>\n      {children}\n    </div>\n  )\n}\n\nexport default Image","import React, { useCallback, useMemo, useState } from 'react'\nimport isHotkey from 'is-hotkey'\nimport { Editable, withReact, useSlate, Slate } from 'slate-react'\nimport { createEditor } from 'slate'\nimport { withHistory } from 'slate-history'\nimport { withLinks, insertLink, isLinkActive } from './utils/links'\nimport { withImages, addImage } from './utils/images'\nimport { toggleBlock, isBlockActive } from './utils/blocks'\nimport { toggleMark, isMarkActive } from './utils/marks'\nimport { HOTKEYS } from './constants'\nimport Toolbar from './Toolbar'\nimport Button from './Button'\nimport Icon from './Icon'\nimport Image from './Image'\nimport './styles.css'\n\nconst Element = ({ attributes, children, element }) => {\n  switch (element.type) {\n    case 'block-quote':\n      return <blockquote {...attributes}>{children}</blockquote>\n    case 'bulleted-list':\n      return <ul {...attributes}>{children}</ul>\n    case 'list-item':\n      return <li {...attributes}>{children}</li>\n    case 'link':\n      return <a {...attributes} href={element.url}>{children}</a>\n    case 'image':\n      return <Image attributes={attributes} children={children} element={element} />\n    // case 'heading-one':\n    //   return <h1 {...attributes}>{children}</h1>\n    // case 'heading-two':\n    //   return <h2 {...attributes}>{children}</h2>\n    // case 'numbered-list':\n    //   return <ol {...attributes}>{children}</ol>\n    default:\n      return <p {...attributes}>{children}</p>\n  }\n}\n\nconst Leaf = ({ attributes, children, leaf }) => {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>\n  }\n\n  if (leaf.code) {\n    children = <code>{children}</code>\n  }\n\n  if (leaf.italic) {\n    children = <em>{children}</em>\n  }\n\n  if (leaf.underline) {\n    children = <u>{children}</u>\n  }\n\n  if (leaf.strikethrough) {\n    children = <del>{children}</del>\n  }\n\n  return <span {...attributes}>{children}</span>\n}\n\nconst ToolButton = ({ format, icon, type }) => {\n  const editor = useSlate()\n  let isActive, toggleFunc;\n\n  switch (type) {\n    case \"block\":\n      isActive = isBlockActive(editor, format)\n      toggleFunc = toggleBlock\n      break;\n    case \"mark\":\n      isActive = isMarkActive(editor, format)\n      toggleFunc = toggleMark\n      break;\n    case \"link\":\n      isActive = isLinkActive(editor)\n      toggleFunc = insertLink\n      break;\n    case \"image\":\n      toggleFunc = addImage\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <Button\n      active={isActive}\n      onMouseDown={event => {\n        event.preventDefault()\n        toggleFunc(editor, format)\n      }}\n    >\n      <Icon>{icon}</Icon>\n    </Button>\n  )\n}\n\nconst initialValue = [\n  {\n    type: 'paragraph',\n    children: [\n      { text: 'This is editable ' },\n      { text: 'rich', bold: true },\n      { text: ' text, ' },\n      { text: 'much', italic: true },\n      { text: ' '},\n      { text: 'better', underline: true },\n      { text: ' than a ' },\n      { text: '<textarea>', code: true },\n      { text: ' '},\n      { text: 'yay', strikethrough: true},\n      { text: '!' },\n    ],\n  },\n  {\n    type: 'paragraph',\n    children: [\n      {\n        text:\n          \"Since it's rich text, you can do things like turn a selection of text \",\n      },\n      { text: 'bold', bold: true },\n      {\n        text:\n          ', or add a semantically rendered block quote in the middle of the page, like this:',\n      },\n    ],\n  },\n  {\n    type: 'paragraph',\n    children: [{ text: 'Try it out for yourself!' }],\n  },\n]\n\nconst RichEditor = () => {\n  const [value, setValue] = useState(initialValue)\n  const renderElement = useCallback(props => <Element {...props} />, [])\n  const renderLeaf = useCallback(props => <Leaf {...props} />, [])\n  const editor = useMemo(() => withImages(withLinks(withHistory(withReact(createEditor())))), [])\n\n  return (\n    <Slate editor={editor} value={value} onChange={setValue}>\n      <Toolbar>\n        <ToolButton format=\"bold\" icon=\"format_bold\" type=\"mark\" />\n        <ToolButton format=\"italic\" icon=\"format_italic\" type=\"mark\" />\n        <ToolButton format=\"underline\" icon=\"format_underlined\" type=\"mark\" />\n        <ToolButton format=\"strikethrough\" icon=\"strikethrough_s\" type=\"mark\" />\n        <ToolButton format=\"code\" icon=\"code\" type=\"mark\" />\n        <ToolButton format=\"bulleted-list\" icon=\"format_list_bulleted\" type=\"block\" />\n        <ToolButton icon=\"link\" type=\"link\" />\n        <ToolButton icon=\"image\" type=\"image\" />\n        {/* <ToolButton format=\"heading-one\" icon=\"looks_one\" type=\"block\" /> */}\n        {/* <ToolButton format=\"heading-two\" icon=\"looks_two\" type=\"block\" /> */}\n        {/* <ToolButton format=\"block-quote\" icon=\"format_quote\" type=\"block\" /> */}\n        {/* <ToolButton format=\"numbered-list\" icon=\"format_list_numbered\" type=\"block\" /> */}\n      </Toolbar>\n      <Editable\n        renderElement={renderElement}\n        renderLeaf={renderLeaf}\n        placeholder=\"Enter some rich text…\"\n        spellCheck\n        autoFocus\n        onKeyDown={event => {\n          for (const hotkey in HOTKEYS) {\n            if (isHotkey(hotkey, event)) {\n              event.preventDefault()\n              const mark = HOTKEYS[hotkey]\n              toggleMark(editor, mark)\n            }\n          }\n        }}\n      />\n    </Slate>\n  )\n}\n\nexport default RichEditor;","import React from 'react';\nimport RichEditor from './RichEditor/RichEditor';\nimport './styles.css';\n\nfunction App() {\n  return (\n    <section className=\"app\">\n      <RichEditor />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}