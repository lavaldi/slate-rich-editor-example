{"version":3,"sources":["RichEditor/utils/links.js","RichEditor/utils/images.js","RichEditor/constants.js","RichEditor/utils/blocks.js","RichEditor/utils/marks.js","RichEditor/utils/deserialize.js","RichEditor/Toolbar/Toolbar.js","RichEditor/Button/Button.js","RichEditor/Icon/Icon.js","RichEditor/Image/Image.js","RichEditor/RichEditor.js","RichEditor/utils/serialize.js","App.js","index.js"],"names":["wrapLink","editor","url","isLinkActive","Transforms","unwrapNodes","match","n","type","unwrapLink","selection","isCollapsed","Range","link","children","text","insertNodes","wrapNodes","split","collapse","edge","insertLink","window","prompt","Editor","nodes","insertImage","image","paragraph","addImage","withImages","insertData","isVoid","element","data","getData","files","length","file","reader","FileReader","addEventListener","result","readAsDataURL","isUrl","ext","URL","pathname","pop","imageExtensions","includes","isImageUrl","INITIAL_VALUE","HOTKEYS","LIST_TYPES","ELEMENT_TAGS","A","el","getAttribute","BLOCKQUOTE","H1","H2","H3","H4","H5","H6","IMG","UL","LI","OL","P","PRE","TEXT_TAGS","CODE","code","DEL","strikethrough","EM","italic","I","S","STRONG","bold","U","underline","isBlockActive","format","toggleBlock","isActive","isList","setNodes","block","isMarkActive","marks","toggleMark","removeMark","addMark","deserialize","nodeType","textContent","nodeName","parent","childNodes","Array","from","map","flat","jsx","attrs","child","Menu","React","forwardRef","ref","className","props","cx","css","Toolbar","Button","active","reversed","Icon","Image","attributes","selected","useSelected","focused","useFocused","contentEditable","alt","src","Element","href","Leaf","leaf","ToolButton","toggleFunc","icon","useSlate","onMouseDown","event","preventDefault","RichEditor","initialValue","serializedInitialValue","parsed","DOMParser","parseFromString","body","console","log","useState","value","setValue","htmlValue","setHtmlValue","renderElement","useCallback","renderLeaf","useMemo","isInline","html","fragment","insertFragment","withHtml","insertText","withLinks","withHistory","withReact","createEditor","convertToHTML","serialize","node","Text","isText","escapeHtml","join","onChange","placeholder","spellCheck","autoFocus","onKeyDown","hotkey","isHotkey","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f5f2ba5.chunk.js","sourcesContent":["import isUrl from 'is-url'\nimport { Editor, Transforms, Range } from 'slate'\n\nconst unwrapLink = editor => {\n  Transforms.unwrapNodes(editor, { match: n => n.type === 'link' })\n}\n\nconst wrapLink = (editor, url) => {\n  if (isLinkActive(editor)) {\n    unwrapLink(editor)\n  }\n\n  const { selection } = editor\n  const isCollapsed = selection && Range.isCollapsed(selection)\n  const link = {\n    type: 'link',\n    url,\n    children: isCollapsed ? [{ text: url }] : [],\n  }\n\n  if (isCollapsed) {\n    Transforms.insertNodes(editor, link)\n  } else {\n    Transforms.wrapNodes(editor, link, { split: true })\n    Transforms.collapse(editor, { edge: 'end' })\n  }\n}\n\nexport const insertLink = editor => {\n  const url = window.prompt('Enter the URL of the link:')\n  if (!url) return\n  if (editor.selection) {\n    wrapLink(editor, url)\n  }\n}\n\nexport const isLinkActive = editor => {\n  const [link] = Editor.nodes(editor, { match: n => n.type === 'link' })\n  return !!link\n}\n\nexport const withLinks = editor => {\n  const { insertData, insertText, isInline } = editor\n\n  editor.isInline = element => {\n    return element.type === 'link' ? true : isInline(element)\n  }\n\n  editor.insertText = text => {\n    if (text && isUrl(text)) {\n      wrapLink(editor, text)\n    } else {\n      insertText(text)\n    }\n  }\n\n  editor.insertData = data => {\n    const text = data.getData('text/plain')\n\n    if (text && isUrl(text)) {\n      wrapLink(editor, text)\n    } else {\n      insertData(data)\n    }\n  }\n\n  return editor\n}","import { Transforms } from 'slate'\nimport isUrl from 'is-url'\nimport imageExtensions from 'image-extensions'\n\nconst insertImage = (editor, url) => {\n  const text = { text: '' }\n  const image = { type: 'image', url, children: [text] }\n  const paragraph = { type: 'paragraph', children: [text]}\n  Transforms.insertNodes(editor, [image, paragraph])\n}\n\nconst isImageUrl = url => {\n  if (!url) return false\n  if (!isUrl(url)) return false\n  const ext = new URL(url).pathname.split('.').pop()\n  return imageExtensions.includes(ext)\n}\n\nexport const addImage = editor => {\n  const url = window.prompt('Enter the URL of the image:')\n  if (!url) return\n  insertImage(editor, url)\n}\n\nexport const withImages = editor => {\n  const { insertData, isVoid } = editor\n\n  editor.isVoid = element => {\n    return element.type === 'image' ? true : isVoid(element)\n  }\n\n  editor.insertData = data => {\n    const text = data.getData('text/plain')\n    const { files } = data\n\n    if (files && files.length > 0) {\n      for (const file of files) {\n        const reader = new FileReader()\n        const [mime] = file.type.split('/')\n\n        if (mime === 'image') {\n          reader.addEventListener('load', () => {\n            const url = reader.result\n            insertImage(editor, url)\n          })\n\n          reader.readAsDataURL(file)\n        }\n      }\n    } else if (isImageUrl(text)) {\n      insertImage(editor, text)\n    } else {\n      insertData(data)\n    }\n  }\n\n  return editor\n}","export const INITIAL_VALUE = [\n  { type: 'paragraph', children: [{ text: '' }] },\n]\n\nexport const HOTKEYS = {\n  'mod+b': 'bold',\n  'mod+i': 'italic',\n  'mod+u': 'underline',\n  'mod+shift+x': 'strikethrough',\n  'mod+j': 'code',\n}\n\nexport const LIST_TYPES = ['numbered-list', 'bulleted-list']\n\nexport const ELEMENT_TAGS = {\n  A: el => ({ type: 'link', url: el.getAttribute('href') }),\n  BLOCKQUOTE: () => ({ type: 'quote' }),\n  H1: () => ({ type: 'heading-one' }),\n  H2: () => ({ type: 'heading-two' }),\n  H3: () => ({ type: 'heading-three' }),\n  H4: () => ({ type: 'heading-four' }),\n  H5: () => ({ type: 'heading-five' }),\n  H6: () => ({ type: 'heading-six' }),\n  IMG: el => ({ type: 'image', url: el.getAttribute('src') }),\n  UL: () => ({ type: 'bulleted-list' }),\n  LI: () => ({ type: 'list-item' }),\n  OL: () => ({ type: 'numbered-list' }),\n  P: () => ({ type: 'paragraph' }),\n  PRE: () => ({ type: 'code' }),\n}\n\n// COMPAT: `B` is omitted here because Google Docs uses `<b>` in weird ways.\nexport const TEXT_TAGS = {\n  CODE: () => ({ code: true }),\n  DEL: () => ({ strikethrough: true }),\n  EM: () => ({ italic: true }),\n  I: () => ({ italic: true }),\n  S: () => ({ strikethrough: true }),\n  STRONG: () => ({ bold: true }),\n  U: () => ({ underline: true }),\n}","import { Editor, Transforms } from 'slate'\nimport { LIST_TYPES } from '../constants'\n\nexport const isBlockActive = (editor, format) => {\n  const [match] = Editor.nodes(editor, {\n    match: n => n.type === format,\n  })\n\n  return !!match\n}\n\nexport const toggleBlock = (editor, format) => {\n  const isActive = isBlockActive(editor, format)\n  const isList = LIST_TYPES.includes(format)\n\n  Transforms.unwrapNodes(editor, {\n    match: n => LIST_TYPES.includes(n.type),\n    split: true,\n  })\n\n  Transforms.setNodes(editor, {\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format,\n  })\n\n  if (!isActive && isList) {\n    const block = { type: format, children: [] }\n    Transforms.wrapNodes(editor, block)\n  }\n}","import { Editor } from 'slate'\n\nexport const isMarkActive = (editor, format) => {\n  const marks = Editor.marks(editor)\n  return marks ? marks[format] === true : false\n}\n\nexport const toggleMark = (editor, format) => {\n  const isActive = isMarkActive(editor, format)\n\n  if (isActive) {\n    Editor.removeMark(editor, format)\n  } else {\n    Editor.addMark(editor, format, true)\n  }\n}","import { Transforms } from 'slate'\nimport { jsx } from 'slate-hyperscript'\nimport { ELEMENT_TAGS, TEXT_TAGS } from '../constants'\n\nexport const deserialize = el => {\n  if (el.nodeType === 3) {\n    return el.textContent\n  } else if (el.nodeType !== 1) {\n    return null\n  } else if (el.nodeName === 'BR') {\n    return '\\n'\n  }\n\n  const { nodeName } = el\n  let parent = el\n\n  if (\n    nodeName === 'PRE' &&\n    el.childNodes[0] &&\n    el.childNodes[0].nodeName === 'CODE'\n  ) {\n    parent = el.childNodes[0]\n  }\n  const children = Array.from(parent.childNodes)\n    .map(deserialize)\n    .flat()\n\n  if (el.nodeName === 'BODY') {\n    return jsx('fragment', {}, children)\n  }\n\n  if (ELEMENT_TAGS[nodeName]) {\n    const attrs = ELEMENT_TAGS[nodeName](el)\n    return jsx('element', attrs, children)\n  }\n\n  if (TEXT_TAGS[nodeName]) {\n    const attrs = TEXT_TAGS[nodeName](el)\n    return children.map(child => jsx('text', attrs, child))\n  }\n\n  return children\n}\n\nexport const withHtml = editor => {\n  const { insertData, isInline, isVoid } = editor\n\n  editor.isInline = element => {\n    return element.type === 'link' ? true : isInline(element)\n  }\n\n  editor.isVoid = element => {\n    return element.type === 'image' ? true : isVoid(element)\n  }\n\n  editor.insertData = data => {\n    const html = data.getData('text/html')\n\n    if (html) {\n      const parsed = new DOMParser().parseFromString(html, 'text/html')\n      const fragment = deserialize(parsed.body)\n      Transforms.insertFragment(editor, fragment)\n      return\n    }\n\n    insertData(data)\n  }\n\n  return editor\n}","import React from 'react';\nimport { cx, css } from 'emotion'\n\nconst Menu = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    {...props}\n    ref={ref}\n    className={cx(\n      className,\n      css`\n        & > * {\n          display: inline-block;\n        }\n        & > * + * {\n          margin-left: 15px;\n        }\n      `\n    )}\n  />\n))\n\nconst Toolbar = React.forwardRef(({ className, ...props }, ref) => (\n  <Menu\n    {...props}\n    ref={ref}\n    className={cx(\n      className,\n      css`\n        position: relative;\n        padding: 1px 18px 17px;\n        margin: 0 -20px;\n        border-bottom: 2px solid #eee;\n        margin-bottom: 20px;\n      `\n    )}\n  />\n))\n\nexport default Toolbar;","import React from 'react'\nimport { cx, css } from 'emotion'\n\nconst Button = React.forwardRef(\n  ({ className, active, reversed, ...props }, ref) => (\n    <span\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        css`\n          cursor: pointer;\n          color: ${reversed\n            ? active\n              ? 'white'\n              : '#aaa'\n            : active\n            ? 'black'\n            : '#ccc'};\n        `\n      )}\n    />\n  )\n)\n\nexport default Button","import React from 'react'\nimport { cx, css } from 'emotion'\n\nconst Icon = React.forwardRef(({ className, ...props }, ref) => (\n  <span\n    {...props}\n    ref={ref}\n    className={cx(\n      'material-icons',\n      className,\n      css`\n        font-size: 18px;\n        vertical-align: text-bottom;\n      `\n    )}\n  />\n))\n\nexport default Icon","import React from 'react'\nimport { useSelected, useFocused } from 'slate-react'\nimport { css } from 'emotion'\n\nconst Image = ({ attributes, children, element }) => {\n  const selected = useSelected()\n  const focused = useFocused()\n\n  return (\n    <div {...attributes}>\n      <div contentEditable={false}>\n        <img\n          alt=\"\"\n          src={element.url}\n          className={css`\n            display: block;\n            max-width: 100%;\n            max-height: 20em;\n            box-shadow: ${selected && focused ? '0 0 0 3px #B4D5FF' : 'none'};\n          `}\n        />\n      </div>\n      {children}\n    </div>\n  )\n}\n\nexport default Image","import React, { useCallback, useMemo, useState } from 'react'\nimport isHotkey from 'is-hotkey'\nimport { Editable, withReact, useSlate, Slate } from 'slate-react'\nimport { createEditor } from 'slate'\nimport { withHistory } from 'slate-history'\nimport { withLinks, insertLink, isLinkActive } from './utils/links'\nimport { withImages, addImage } from './utils/images'\nimport { toggleBlock, isBlockActive } from './utils/blocks'\nimport { toggleMark, isMarkActive } from './utils/marks'\nimport { withHtml, deserialize } from './utils/deserialize'\nimport { serialize } from './utils/serialize'\nimport { INITIAL_VALUE, HOTKEYS } from './constants'\nimport Toolbar from './Toolbar'\nimport Button from './Button'\nimport Icon from './Icon'\nimport Image from './Image'\nimport './styles.css'\n\nconst Element = ({ attributes, children, element }) => {\n  switch (element.type) {\n    case 'block-quote':\n      return <blockquote {...attributes}>{children}</blockquote>\n    case 'bulleted-list':\n      return <ul {...attributes}>{children}</ul>\n    case 'list-item':\n      return <li {...attributes}>{children}</li>\n    case 'link':\n      return <a {...attributes} href={element.url}>{children}</a>\n    case 'image':\n      return <Image attributes={attributes} children={children} element={element} />\n    // case 'heading-one':\n    //   return <h1 {...attributes}>{children}</h1>\n    // case 'heading-two':\n    //   return <h2 {...attributes}>{children}</h2>\n    // case 'numbered-list':\n    //   return <ol {...attributes}>{children}</ol>\n    default:\n      return <p {...attributes}>{children}</p>\n  }\n}\n\nconst Leaf = ({ attributes, children, leaf }) => {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>\n  }\n\n  if (leaf.code) {\n    children = <code>{children}</code>\n  }\n\n  if (leaf.italic) {\n    children = <em>{children}</em>\n  }\n\n  if (leaf.underline) {\n    children = <u>{children}</u>\n  }\n\n  if (leaf.strikethrough) {\n    children = <del>{children}</del>\n  }\n\n  return <span {...attributes}>{children}</span>\n}\n\nconst ToolButton = ({ format, icon, type }) => {\n  const editor = useSlate()\n  let isActive, toggleFunc;\n\n  switch (type) {\n    case \"block\":\n      isActive = isBlockActive(editor, format)\n      toggleFunc = toggleBlock\n      break;\n    case \"mark\":\n      isActive = isMarkActive(editor, format)\n      toggleFunc = toggleMark\n      break;\n    case \"link\":\n      isActive = isLinkActive(editor)\n      toggleFunc = insertLink\n      break;\n    case \"image\":\n      toggleFunc = addImage\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <Button\n      active={isActive}\n      onMouseDown={event => {\n        event.preventDefault()\n        toggleFunc(editor, format)\n      }}\n    >\n      <Icon>{icon}</Icon>\n    </Button>\n  )\n}\n\nconst RichEditor = ({ initialValue }) => {\n  let serializedInitialValue = INITIAL_VALUE\n  if (initialValue) {\n    const parsed = new DOMParser().parseFromString(initialValue, 'text/html')\n    serializedInitialValue = deserialize(parsed.body);\n  }\n  console.log(serializedInitialValue);\n  const [value, setValue] = useState(serializedInitialValue)\n  const [htmlValue, setHtmlValue] = useState(\"\")\n  const renderElement = useCallback(props => <Element {...props} />, [])\n  const renderLeaf = useCallback(props => <Leaf {...props} />, [])\n  const editor = useMemo(() => withHtml(withImages(withLinks(withHistory(withReact(createEditor()))))), [])\n\n  const convertToHTML = () => {\n    setHtmlValue(serialize(editor));\n    console.log(\"htmlValue\", htmlValue);\n  }\n\n  return (\n    <Slate editor={editor} value={value} onChange={value => {\n      setValue(value);\n      convertToHTML();\n    }}>\n      <Toolbar>\n        <ToolButton format=\"bold\" icon=\"format_bold\" type=\"mark\" />\n        <ToolButton format=\"italic\" icon=\"format_italic\" type=\"mark\" />\n        <ToolButton format=\"underline\" icon=\"format_underlined\" type=\"mark\" />\n        <ToolButton format=\"strikethrough\" icon=\"strikethrough_s\" type=\"mark\" />\n        <ToolButton format=\"code\" icon=\"code\" type=\"mark\" />\n        <ToolButton format=\"bulleted-list\" icon=\"format_list_bulleted\" type=\"block\" />\n        <ToolButton icon=\"link\" type=\"link\" />\n        <ToolButton icon=\"image\" type=\"image\" />\n        {/* <ToolButton format=\"heading-one\" icon=\"looks_one\" type=\"block\" /> */}\n        {/* <ToolButton format=\"heading-two\" icon=\"looks_two\" type=\"block\" /> */}\n        {/* <ToolButton format=\"block-quote\" icon=\"format_quote\" type=\"block\" /> */}\n        {/* <ToolButton format=\"numbered-list\" icon=\"format_list_numbered\" type=\"block\" /> */}\n      </Toolbar>\n      <Editable\n        renderElement={renderElement}\n        renderLeaf={renderLeaf}\n        placeholder=\"Enter some rich text…\"\n        spellCheck\n        autoFocus\n        onKeyDown={event => {\n          for (const hotkey in HOTKEYS) {\n            if (isHotkey(hotkey, event)) {\n              event.preventDefault()\n              const mark = HOTKEYS[hotkey]\n              toggleMark(editor, mark)\n            }\n          }\n        }}\n      />\n    </Slate>\n  )\n}\n\nexport default RichEditor;","import escapeHtml from 'escape-html'\nimport { Text } from 'slate'\n\nexport const serialize = node => {\n  if (Text.isText(node)) {\n    const text = escapeHtml(node.text)\n    if (node.bold) return `<strong>${text}</strong>`\n    if (node.code) return `<code>${text}</code>`\n    if (node.italic) return `<em>${text}</em>`\n    if (node.underline) return `<u>${text}</u>`\n    if (node.strikethrough) return `<del>${text}</del>`\n    return text\n  }\n\n  const children = node.children.map(n => serialize(n)).join('')\n  console.log(\"node\", node);\n\n  switch (node.type) {\n    case 'bulleted-list':\n      return `<ul>${children}</ul>`\n    case 'list-item':\n      return `<li>${children}</li>`\n    case 'paragraph':\n      return `<p>${children}</p>`\n    case 'link':\n      return `<a href=\"${escapeHtml(node.url)}\">${children}</a>`\n    case 'image':\n      return `<img alt=\"\" src=\"${escapeHtml(node.url)}\" />`\n    default: {\n      return children\n    }\n  }\n}","import React from 'react';\nimport RichEditor from './RichEditor/RichEditor';\nimport './styles.css';\n\n\nconst editorValue = '<ul class=\"md-block-unordered-list-item\"><li>It\\'s rare that TLs are invited to participate in the pitch review process.</li></ul>'\n\n// TODO: Send a PR modifying https://github.com/ianstormtaylor/slate/blob/master/packages/slate-hyperscript/src/creators.ts updating the resolveDescendants function\n\n// const editorValue = '<ul><li>It\\'s rare that TLs are invited to participate in the pitch <strong>review</strong> process.</li><img alt=\"\" src=\"https://p-VVF5MJM.t2.n0.cdn.getcloudapp.com/items/2NuXk4j8/Image%202020-04-14%20at%202.39.07%20PM.png?v=1f4b0ec164546d136b3f61a1f38c9aef\" /><p></p></ul>'\n\nfunction App() {\n  return (\n    <section className=\"app\">\n      <RichEditor initialValue={editorValue} />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}